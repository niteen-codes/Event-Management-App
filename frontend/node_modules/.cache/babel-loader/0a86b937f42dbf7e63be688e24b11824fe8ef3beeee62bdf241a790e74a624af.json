{"ast":null,"code":"var _jsxFileName = \"D:\\\\Event Management\\\\frontend\\\\event-management\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EventList from \"../components/EventList\";\nimport EventForm from \"../components/EventForm\";\nimport \"./Dashboard.css\"; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [filter, setFilter] = useState({\n    category: \"\",\n    date: \"\"\n  });\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/events\", {\n          params: filter\n        });\n        setEvents(response.data);\n      } catch (err) {\n        console.error(\"Failed to fetch events:\", err);\n      }\n    };\n    fetchEvents();\n  }, [filter]);\n  const isGuest = localStorage.getItem(\"token\") && JSON.parse(atob(localStorage.getItem(\"token\").split(\".\")[1])).userId === \"guest\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Event Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Filter by category\",\n          value: filter.category,\n          onChange: e => setFilter({\n            ...filter,\n            category: e.target.value\n          }),\n          className: \"filter-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filter.date,\n          onChange: e => setFilter({\n            ...filter,\n            date: e.target.value\n          }),\n          className: \"filter-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n        isGuest: isGuest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ueOFNsXJDQXNWGca+Y0cVGAbwtU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","EventList","EventForm","jsxDEV","_jsxDEV","Dashboard","_s","events","setEvents","filter","setFilter","category","date","fetchEvents","response","get","params","data","err","console","error","isGuest","localStorage","getItem","JSON","parse","atob","split","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/Event Management/frontend/event-management/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport EventList from \"../components/EventList\";\r\nimport EventForm from \"../components/EventForm\";\r\nimport \"./Dashboard.css\"; // Import CSS file\r\n\r\nconst Dashboard = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [filter, setFilter] = useState({ category: \"\", date: \"\" });\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/events\", { params: filter });\r\n        setEvents(response.data);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch events:\", err);\r\n      }\r\n    };\r\n    fetchEvents();\r\n  }, [filter]);\r\n\r\n  const isGuest = localStorage.getItem(\"token\") && JSON.parse(atob(localStorage.getItem(\"token\").split(\".\")[1])).userId === \"guest\";\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"dashboard-content\">\r\n        <h1 className=\"dashboard-title\">Event Dashboard</h1>\r\n        <div className=\"filter-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Filter by category\"\r\n            value={filter.category}\r\n            onChange={(e) => setFilter({ ...filter, category: e.target.value })}\r\n            className=\"filter-input\"\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={filter.date}\r\n            onChange={(e) => setFilter({ ...filter, date: e.target.value })}\r\n            className=\"filter-input\"\r\n          />\r\n        </div>\r\n        <EventForm isGuest={isGuest} />\r\n        <EventList events={events} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,QAAQ,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAEhEb,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,kCAAkC,EAAE;UAAEC,MAAM,EAAEP;QAAO,CAAC,CAAC;QACxFD,SAAS,CAACM,QAAQ,CAACG,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC/C;IACF,CAAC;IACDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,MAAMY,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,KAAK,OAAO;EAEjI,oBACExB,OAAA;IAAKyB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClC1B,OAAA;MAAKyB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC1B,OAAA;QAAIyB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpD9B,OAAA;QAAKyB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B1B,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,oBAAoB;UAChCC,KAAK,EAAE5B,MAAM,CAACE,QAAS;UACvB2B,QAAQ,EAAGC,CAAC,IAAK7B,SAAS,CAAC;YAAE,GAAGD,MAAM;YAAEE,QAAQ,EAAE4B,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UACpER,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC,eACF9B,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXE,KAAK,EAAE5B,MAAM,CAACG,IAAK;UACnB0B,QAAQ,EAAGC,CAAC,IAAK7B,SAAS,CAAC;YAAE,GAAGD,MAAM;YAAEG,IAAI,EAAE2B,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC,CAAE;UAChER,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN9B,OAAA,CAACF,SAAS;QAACmB,OAAO,EAAEA;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/B9B,OAAA,CAACH,SAAS;QAACM,MAAM,EAAEA;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA1CID,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}